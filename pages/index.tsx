import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import { BaseLayout } from '@/components/layouts/BaseLayout'
import { HeroBanner } from '@/components/generic/HeroBanner'
import { HeroFilters } from '@/components/generic/HeroFilters'
import { SalonCard } from '@/components/generic/SalonCard'
import { ContentCardRow } from '@/components/generic/ContentCardRow'
import {
  Card,
  CardGallery,
  MapSection,
  PostCard,
  PostCardWide,
  PostList,
} from '@/components/generic'
import { SwiperSlide } from 'swiper/react'
import { ShowNewItems } from '@/components/generic/ShowNewItems'
import { getLaunches } from '@/graphql/queries.graphql'
import { addApolloState, initializeApollo } from '@/graphql/apollo'
import { GetLaunches } from '@/graphql/__generated__/GetLaunches'
import { SectionBlock } from '@/components/layouts/SectionBlock'
import { Responsive } from '@/components/generic'

const fixtures = [
  { id: '222dsadas', slug: 'one-project-time', best: 1 },
  { id: 'asddsad222sadasd', slug: 'two-project-time', best: 0 },
  { id: 'asdsad3242asd', slug: 'three-project-time', best: 0 },
  { id: 'asdsdadasfffsadasd', slug: 'four-project-time', best: 0 },
  { id: 'asdxfsadasd', slug: 'four-project-time', best: 0 },
  { id: 'asdsdadvadasd', slug: 'four-project-time', best: 0 },
  { id: 'xfffsadasd', slug: 'four-project-time', best: 0, tag: 'New' },
  { id: 'xfffsadssasd', slug: 'four-project-time', best: 0, tag: 'New' },
]

const Home: NextPage<GetLaunches> = ({ launchesPast }) => {
  return (
    <>
      <Head>
        <title>EroGuide - Home page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BaseLayout>
        <SectionBlock>
          <HeroBanner />
          <Responsive desktop>
            <HeroFilters />
          </Responsive>
        </SectionBlock>
        <SectionBlock>
          <ShowNewItems itemsToShow={4} title={'Nové slečny'} />
        </SectionBlock>
        <SectionBlock>
          <ContentCardRow
            title="Holky z privátů"
            counter={535}
            counterTitle="All"
            itemsToShow={[4, 3, 2]}
            href="/gallery"
            bottomControl
          >
            {fixtures.map((item) => (
              <SwiperSlide key={item.id}>
                <Card {...item} tagTitle={item.slug} inSwipe />
              </SwiperSlide>
            ))}
          </ContentCardRow>
        </SectionBlock>
        <SectionBlock>
          <ContentCardRow
            title="Podniky"
            counter={535}
            spaceBetween={8}
            counterTitle="All salons"
            href="/salons"
            bottomControl
          >
            {fixtures.map((item) => (
              <SwiperSlide key={item.id}>
                <SalonCard {...item} inSwipe />
              </SwiperSlide>
            ))}
          </ContentCardRow>
        </SectionBlock>
        <SectionBlock>
          {launchesPast && (
            <PostList
              title="Blog"
              counter={23}
              counterTitle="Vše články"
              postData={launchesPast}
            />
          )}
        </SectionBlock>

        <SectionBlock>
          <CardGallery cards={fixtures} title={'Ladies gallery'} />
        </SectionBlock>
        <SectionBlock>
          <ContentCardRow
            title="Blog"
            counter={34}
            counterTitle="All"
            itemsToShow={[4, 3, 2]}
            href="/blog"
          >
            {fixtures.map((item) => (
              <SwiperSlide key={item.id}>
                <PostCard {...item} title={item.slug} />
              </SwiperSlide>
            ))}
          </ContentCardRow>
        </SectionBlock>
        <SectionBlock>
          <MapSection />
        </SectionBlock>
        <SectionBlock>
          <ContentCardRow
            title="Stories"
            counter={23}
            counterTitle="All"
            itemsToShow={[2, 2, 1]}
            href="/blog"
          >
            {fixtures.map((item) => (
              <SwiperSlide key={item.id}>
                <PostCardWide {...item} tagTitle={item.slug} inSwipe />
              </SwiperSlide>
            ))}
          </ContentCardRow>
        </SectionBlock>
      </BaseLayout>
    </>
  )
}

export const getServerSideProps: GetServerSideProps = async () => {
  const apolloClient = initializeApollo()
  const { data } = await apolloClient.query({
    query: getLaunches,
  })

  return addApolloState(apolloClient, {
    props: {
      launchesPast: data.launchesPast,
    },
  })
}

export default Home
