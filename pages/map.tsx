import { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import { BaseLayout } from '@/components/layouts/BaseLayout'
import { TopLinePageContent } from '@/components/generic'
import { MapPage } from '@/components/pages'
import { SectionBlock } from '@/components/layouts/SectionBlock'
import { addApolloState, initializeApollo } from '@/graphql/apollo'
import { listLocation } from '@/graphql/queries.graphql'
import {
  ListLocation,
  ListLocation_listLocation,
} from '@/graphql/types/ListLocations'

const Map: NextPage<ListLocation & { pin: string }> = ({
  listLocation,
  pin,
}) => {
  return (
    <>
      <Head>
        <title>Map</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BaseLayout>
        <SectionBlock>
          <TopLinePageContent />
          <MapPage listLocation={listLocation} pinId={pin} />
        </SectionBlock>
      </BaseLayout>
    </>
  )
}
export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const apolloClient = initializeApollo()

  const { salonId, employeeId } = query

  const { data: locations } = await apolloClient.query({
    query: listLocation,
    variables: { first: 16 },
  })

  const listLocationArray: Array<ListLocation_listLocation> =
    locations.listLocation
  let selectedItemId = ''
  if (salonId) {
    selectedItemId =
      listLocationArray.find((x) => x.salonId === salonId)?.id ?? 0
  } else if (employeeId) {
    selectedItemId =
      listLocationArray.find((x) => x.employeeId === employeeId)?.id ?? 0
  }

  return addApolloState(apolloClient, {
    props: {
      listLocation: listLocationArray,
      pin: selectedItemId,
    },
  })
}
export default Map
